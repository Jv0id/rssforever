version: "3"


networks:
  rssforever:


# ---------------------------------------- nginx ---------------------------------------- #
services:
  nginx:
    image: nginx:${NGINX_VERSION}
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf/nginx.sh:/nginx.sh
      - ./nginx/vhost:/etc/nginx/conf.d/vhost
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/html:/usr/share/nginx/html
    environment:
      - PROTOCOL=${PROTOCOL}
      - RSS_DOMAIN=${RSS_DOMAIN}
      - RSS_DOAMIN_CERT=${RSS_DOAMIN_CERT}
      - RSS_DOMAIN_KEY=${RSS_DOMAIN_KEY}
      - RSSHUB_DOMAIN=${RSSHUB_DOMAIN}
      - RSSHUB_DOAMIN_CERT=${RSSHUB_DOAMIN_CERT}
      - RSSHUB_DOMAIN_KEY=${RSSHUB_DOMAIN_KEY}
    networks:
      - rssforever
    depends_on:
      - service.rss
    command: ["sh", "-c", "/nginx.sh"]


# ---------------------------------------- ttrss ---------------------------------------- #
  freshrss.db:
    image: postgres:12-alpine
    # container_name: freshrss.db
    hostname: freshrss.db
    restart: unless-stopped
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-freshrss}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-freshrss}
      POSTGRES_DB: ${POSTGRES_DB:-freshrss}
    networks:
      - rssforever

  service.rss:
    image: freshrss/freshrss:latest
    # container_name: freshrss-app
    hostname: freshrss-app
    restart: unless-stopped
    depends_on:
      - freshrss.db
    volumes:
      - ./data:/var/www/FreshRSS/data
      - ./extensions:/var/www/FreshRSS/extensions
    environment:
      CRON_MIN: '*/20'
      TZ: Asia/Shanghai
    networks:
      - rssforever

